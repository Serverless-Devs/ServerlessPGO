<classloaders>
    <!--  final classloader name will be:
          <klass> + '@' + <fieldName value (if has)> + '@' + <jar paths (if need)> + '@' + <uniqueName (if has)>
    -->
    <classloader>
        <klass>com.taobao.pandora.service.loader.ModuleClassLoader</klass>
        <fieldName>moduleName</fieldName>  <!--  should be java.lang.String  -->
        <appendJarPathsAsName>false</appendJarPathsAsName> <!--  if the klass is a URLClassLoader, `true` will add its JarPaths to its name. or, the `true` will be ignored.  -->
        <uniqueName></uniqueName>
    </classloader>

    <classloader>
        <klass>com.taobao.pandora.boot.loader.LaunchedURLClassLoader</klass>
        <uniqueName>Taobao_LaunchedURLClassLoader_0</uniqueName>
    </classloader>

    <classloader>
        <klass>org.apache.catalina.loader.ParallelWebappClassLoader</klass>
        <uniqueName>parallelTomcatLoader_0</uniqueName>
    </classloader>

    <classloader>
        <klass>org.apache.catalina.loader.WebappClassLoader</klass>
        <uniqueName>webTomcatLoader_0</uniqueName>
    </classloader>

    <classloader>
        <klass>org.springframework.boot.loader.LaunchedURLClassLoader</klass>
        <uniqueName>LaunchedURLClassLoader_0</uniqueName>
    </classloader>

    <classloader>
        <klass>java.net.FactoryURLClassLoader</klass>
        <appendJarPathsAsName>true</appendJarPathsAsName>
    </classloader>

    <classloader>
        <klass>java.net.URLClassLoader</klass>
        <appendJarPathsAsName>true</appendJarPathsAsName>
    </classloader>

    <classloader>
        <klass>com.aliyun.serverless.runtime.classloader.FunctionClassLoader</klass>
        <appendJarPathsAsName>true</appendJarPathsAsName>
    </classloader>

    <classloader>
        <klass>com.example.demo.MyClassLoader</klass>
        <appendJarPathsAsName>true</appendJarPathsAsName>
    </classloader>
</classloaders>
